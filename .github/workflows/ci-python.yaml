name: CI (Python)

on:
  push:
    branches:
      - 'main'
      - 'master'
    paths:
      - app_python/**
  pull_request:
    paths:
      - app_python/**

jobs:
  test:
    name: Lint and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        working-directory: ./app_python
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
      - name: Lint with Ruff
        if: '!cancelled()'
        working-directory: ./app_python
        run: |
          pip install ruff
          ruff check --output-format=github .
      - name: Test with PyTest
        if: '!cancelled()'
        working-directory: ./app_python
        run: |
          pip install pytest
          python -m pytest ./tests
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: snyk/actions/setup@master
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        working-directory: ./app_python
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
      - name: Snyk test
        working-directory: ./app_python
        run: snyk test --sarif-file-output=../snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
  build:
    runs-on: ubuntu-latest
    needs: [test]
    if: always() && (needs.test.result == 'success')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./app_python
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops-simple-app:latest
